[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Crime Trends and Socioeconomic Analysis in Philadelphia",
    "section": "",
    "text": "In this project, we delve into the intricate relationship between crime trends and socioeconomic factors in Philadelphia. Utilizing advanced analytical techniques, we aim to uncover patterns and insights that can help in understanding and potentially mitigating crime in urban areas.\nOur analysis is powered by Quarto, enabling us to integrate Python code seamlessly with our narrative, and our findings are shared online via GitHub Pages. This platform allows us to present a comprehensive and interactive exploration of crime data and socioeconomic variables.\n\n\n\n\n\n\nNote\n\n\n\nOur project is a culmination of extensive research and data analysis. While this site serves as a primary mode of dissemination, we encourage viewers to explore the data and methodologies in depth for a richer understanding."
  },
  {
    "objectID": "index.html#welcome-to-our-analysis",
    "href": "index.html#welcome-to-our-analysis",
    "title": "Crime Trends and Socioeconomic Analysis in Philadelphia",
    "section": "",
    "text": "In this project, we delve into the intricate relationship between crime trends and socioeconomic factors in Philadelphia. Utilizing advanced analytical techniques, we aim to uncover patterns and insights that can help in understanding and potentially mitigating crime in urban areas.\nOur analysis is powered by Quarto, enabling us to integrate Python code seamlessly with our narrative, and our findings are shared online via GitHub Pages. This platform allows us to present a comprehensive and interactive exploration of crime data and socioeconomic variables.\n\n\n\n\n\n\nNote\n\n\n\nOur project is a culmination of extensive research and data analysis. While this site serves as a primary mode of dissemination, we encourage viewers to explore the data and methodologies in depth for a richer understanding."
  },
  {
    "objectID": "index.html#project-overview",
    "href": "index.html#project-overview",
    "title": "Crime Trends and Socioeconomic Analysis in Philadelphia",
    "section": "Project Overview",
    "text": "Project Overview\nHere, we provide a brief overview of our projectâ€™s objectives, the datasets used, and the analytical methods employed.\n\nObjective: Our main goal is to understand how various socioeconomic factors correlate with crime trends in Philadelphia.\nData Sources: We utilize public datasets from the Philadelphia Police Department, U.S. Census data, and other relevant sources.\nMethodology: Our approach includes data cleaning, exploratory data analysis, statistical modeling, and spatial analysis using Python."
  },
  {
    "objectID": "index.html#in-depth-analysis",
    "href": "index.html#in-depth-analysis",
    "title": "Crime Trends and Socioeconomic Analysis in Philadelphia",
    "section": "In-Depth Analysis",
    "text": "In-Depth Analysis\nThis section dives deep into the specifics of our analysis. We break down our approach into several key components:\n\nData Preparation and Cleaning: Details on how we processed the raw data.\nExploratory Data Analysis (EDA): Initial findings and patterns observed from the data.\nStatistical Analysis: Results from various statistical tests and models.\nSpatial Analysis: Geographic patterns and insights derived from the data."
  },
  {
    "objectID": "analysis/crime-by-type-2023.html",
    "href": "analysis/crime-by-type-2023.html",
    "title": "Explorative Visualization and Analysis of 2023 Philadelphia Crime Data",
    "section": "",
    "text": "This notebook presents an explorative analysis of the 2023 crime data from Philadelphia. The analysis includes various types of incidents, with a focus on grouping them by incident type. We will also visualize the coordinates of each incident spot to observe spatial patterns and trends in the data. The goal is to gain deeper insights into the distribution and nature of crime incidents across different areas of Philadelphia.\nInspired by: Exploratory Data Analysis of Philadelphia Crime Data\n\nQuick Overview of Crime Data\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nfrom shapely.geometry import Point\nimport numpy as np\n%matplotlib inline\nincidents = pd.read_csv('../data/incidents_part1_part2.csv')\nincidents.head()\n\n\n\n\n\n\n\n\nobjectid\ndc_dist\npsa\ndispatch_date_time\ndispatch_date\ndispatch_time\nhour\ndc_key\nlocation_block\nucr_general\ntext_general_code\npoint_x\npoint_y\nlat\nlng\n\n\n\n\n0\n151849\n22\nNaN\n2018-12-08 07:16:00+00\n2018-12-08\n02:16:00\n2.0\n2.018221e+11\nN 29th St & Ridge Ave\n300\nRobbery No Firearm\n-75.180807\n39.986800\n39.986800\n-75.180807\n\n\n1\n151850\n16\nNaN\n2018-07-12 01:26:00+00\n2018-07-11\n21:26:00\n21.0\n2.018160e+11\n400 BLOCK N 50th St\n400\nAggravated Assault No Firearm\n-75.220113\n39.964369\n39.964369\n-75.220113\n\n\n2\n151851\n14\nNaN\n2018-02-26 06:28:00+00\n2018-02-26\n01:28:00\n1.0\n2.018140e+11\nN 20th St & Wyncote Ave\n300\nRobbery Firearm\n-75.150925\n40.057370\n40.057370\n-75.150925\n\n\n3\n151853\n17\nNaN\n2018-02-20 01:02:00+00\n2018-02-19\n20:02:00\n20.0\n2.018170e+11\n2700 BLOCK Reed St\n400\nAggravated Assault Firearm\n-75.189692\n39.935738\n39.935738\n-75.189692\n\n\n4\n151854\n24\nNaN\n2018-09-20 23:31:00+00\n2018-09-20\n19:31:00\n19.0\n2.018241e+11\n3500 BLOCK FRANKFORD AVE\n500\nBurglary Residential\n-75.102406\n39.997427\n39.997427\n-75.102406\n\n\n\n\n\n\n\n\n\nCategorize Indicents into Various Types\n\ncrimes_names = ['Homicide', 'Aggravated', 'Rape', 'Drunkenness', 'Narcotic', 'Prostitution', 'Conduct', 'Fraud', 'Vandalism', 'Robbery', 'Burglary', 'Theft']\ncrimes_labels = ['Homicide', 'Aggravated Assault', 'Rape', 'Public Drunkenness', 'Drug Law Violations', 'Prostitution','Disorderly Conduct', 'Fraud', 'Vandalism','Robbery','Burglary','Theft']\n\n\n\nVisualize the Street Poles\n\ndata_poles = pd.read_csv('Street_Poles.csv')\nX_poles = data_poles['X'].values\nY_poles = data_poles['Y'].values\n\nplt.figure(figsize=(20,20))\nplt.scatter(X_poles,Y_poles,0.1,c='k')\nplt.xlim(-75.3,-74.9)\nplt.ylim(39.85,40.15)\nplt.axis('off')\n\n(-75.3, -74.9, 39.85, 40.15)\n\n\n\n\n\n\nimport numpy as np\nfrom sklearn.neighbors import KernelDensity\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Assuming incidents is a pandas DataFrame with the relevant data\ndata_crime = incidents\nmask_area = ((data_crime['point_x'] &gt; -75.3) & (data_crime['point_x'] &lt; -74.9) & \n             (data_crime['point_y'] &gt; 39.85) & (data_crime['point_y'] &lt; 40.15))\ndata_crime = data_crime[mask_area]\n\nmax_points = 20000\nxbins, ybins = 500, 500  # Set the number of bins as integers\nbandwidth = 0.001\n\n# Define a unique color for each type of crime\ncolors = plt.cm.get_cmap('viridis', len(crimes_names))\n\nfor k, crime in enumerate(crimes_names):\n    # Filter data by crime\n    crime_data = data_crime[data_crime['text_general_code'].str.contains(crime)]\n\n    # If there are more points than max_points, randomly sample\n    if len(crime_data) &gt; max_points:\n        crime_data = crime_data.sample(n=max_points)\n    \n    X_crime = crime_data['point_x'].values\n    Y_crime = crime_data['point_y'].values\n    XY_crime = np.array([X_crime, Y_crime]).T\n\n    # Create grid for KDE\n    x_min, x_max = X_crime.min(), X_crime.max()\n    y_min, y_max = Y_crime.min(), Y_crime.max()\n    x_grid = np.linspace(x_min, x_max, xbins)\n    y_grid = np.linspace(y_min, y_max, ybins)\n    xx, yy = np.meshgrid(x_grid, y_grid)\n    xy_sample = np.vstack([xx.ravel(), yy.ravel()]).T\n\n    # KDE\n    kde_skl = KernelDensity(bandwidth=bandwidth)\n    kde_skl.fit(XY_crime)\n\n    z = np.exp(kde_skl.score_samples(xy_sample))\n    zz = z.reshape(xx.shape)\n\n    plt.figure(figsize=(20, 20))\n    plt.scatter(X_poles, Y_poles, 0.1, c='k', alpha=0.6)\n    plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n    plt.xlim(-75.3, -74.9)\n    plt.ylim(39.85, 40.15)\n    plt.axis('off')\n    plt.title(f'{crime} 2023', size=33, color=colors(k))\n\nplt.show()\n\n\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:18: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n  colors = plt.cm.get_cmap('viridis', len(crimes_names))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))\n/var/folders/tf/c5gvkllj6dn72kwhbbxxgcm40000gn/T/ipykernel_26683/3033318570.py:49: UserWarning: No data for colormapping provided via 'c'. Parameters 'vmax' will be ignored\n  plt.scatter(X_crime, Y_crime, 7, c=colors(k), vmax=np.percentile(z, 95))"
  }
]